# This is a comment
build --config=foo

# This is a weird \
  multi-line comment

build --incompatible_py3_is_default=true
build --incompatible_py3_is_default true
common  --enable_platform_specific_config
common:macos --repo_env=PATH
build --action_env=PATH=/bin:/sbin:/usr/bin
build --sandbox_tmpfs_path=/tmp
common: --action_env=NO_CONFIG
build:space\ name --action_env=FOO
build:"space name" --action_env=FOO
build:'space name' --action_env=FOO
build --config="space name"
build --config='space name'
build --config=space\ name
build --build_label=some\ label
build --build_label="some \"quoted\" label"
build --build_label='some "quoted" label'

test -k

build --platforms=//:foo

build --action_env=PYTHONNOUSERSITE=1
build --test_tag_filters=-requires_s3
test --objc_debug_with_GLIBCXX

build -j "HOST_CPUS * .5"
build --local_cpu_resources=HOST_CPUS*0.5
build "--local_cpu_resources=HOST_CPUS*0.5"
build --local_cpu_resources="HOST_CPUS * 0.5"
build "--local_cpu_resources=HOST_CPUS * 0.5"
  build --local_cpu_resources HOST_CPUS*0.5
build --local_resources=cpu=HOST_CPUS*0.5
test --nobuild_runfile_links
build:linux --config=remote  
build:remote --jobs=200
build:remote --jobs=auto
build:remote --jobs 200
build:no_remote --jobs="HOST_CPUS*.5"
build:ci -c opt
coverage:remote --remote_download_regex=.*/((testlogs/.*/_coverage/.*)|coverage.dat$|_coverage/_coverage_report.dat$)
coverage:remote --remote_download_regex=".*/((testlogs/.*/_coverage/.*)|coverage.dat$| _coverage/_coverage_report.dat$)"
coverage:remote --remote_download_regex='.*/((testlogs/.*/_coverage/.*)|coverage.dat$|_coverage/_coverage_report.dat$)'

build:ci --stamp --verbose_failures

try-import .bazelrc-user
try-import:"weird config" foo.bazelrc
import %workspace%/.bazelrc-user
import:ci %workspace%/ci.bazelrc
build --//rules/foo:enable_bar
common --no@some_rules//:enable_foo  # comment
build --//rules/foo
build --//rules/foo=bar
build --@some_rules//rules/foo:enable_bar
build --@some_rules//rules/foo:rustflags=-Cforce-frame-pointers=yes
build --@some_rules//rules/foo:rustflags="-Cforce-frame-pointers=yes"
build --@some_invalid:target=nope
build --another/invalid:target=nope
build --/yet/another/invalid:target=nope
build --no@some_invalid:target=nope
build:ci //...
build:ci //example/...
build:ci //:all
build:ci //example:all
build:ci //:foo
build:ci @rules_go//:example
build:ci @rules_go//pkg:example
build --copt=-ffunction-sections --linkopt=-Wl,--gc-sections
build "--copt=-ffunction-sections" --linkopt=-Wl,--gc-sections
build "--copt=-ffunction-sections" \
  --linkopt=-Wl,--gc-sections 

build --workspace_status_script name\ with\ escaped\ space
build --workspace_status_script \
  some/path
build --workspace_status_script \
  name\ with\ escaped\ space \
  but_not_another
build --workspace_status_script \
  value_on_next_line \
  --stamp
build --workspace_status_script \
  value_on_next_line --stamp

startup --io_nice_level=1
startup --io_nice_level=-1
startup --override_repository=foo=/tmp/bar
startup: --override_repository=foo=/tmp/bar
startup:invalid --override_repository=foo=/tmp/bar
build invalid-target
not a valid line
